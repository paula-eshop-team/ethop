<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eshop.dao.UserMapper">
  <resultMap id="userBaseResultMap" type="com.eshop.pojo.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="userBase_Column_List">
    id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>
  <select id="selectUserByPrimaryKey" parameterType="java.lang.Integer" resultMap="userBaseResultMap">
    select 
    <include refid="userBase_Column_List" />
    from eshop_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteUserByPrimaryKey" parameterType="java.lang.Integer">
    delete from eshop_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertUser" parameterType="com.eshop.pojo.User">
    insert into eshop_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(), 
      now())
  </insert>
  <insert id="insertUserSelective" parameterType="com.eshop.pojo.User">
    insert into eshop_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateUserByPrimaryKeySelective" parameterType="com.eshop.pojo.User">
    update eshop_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateUserByPrimaryKey" parameterType="com.eshop.pojo.User">
    update eshop_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="checkUsesUserName" resultType="int" parameterType="String">
  	select count(1) from eshop_user where username = #{username}
  </select>
  
  <select id="checkUsersInfoByEamil" resultType="int" parameterType="String">
  	select count(1) from eshop_user where email = #{email}
  </select>
  
  <select id="selectUserLoginInfo" resultMap="userBaseResultMap" parameterType="map">
  	<!-- 要什么查什么,不要select *, 多部门开发时,可能会给数据库加字段,而你的代码中可能没有可支持的字段时容易保存 -->
  	select
  	<include refid="userBase_Column_List" />
    from eshop_user
    where username = #{username} and password = #{password}
  </select>
  
  <select id="selectFaftyQuestionByUsername" resultType="String" parameterType="String">
  	select question from eshop_user where username = #{username} 
  </select>
  
  <select id="checkUsersEmailInfoByUserId" resultType="int" parameterType="map">
  	select count(1) from eshop_user where email = #{email} and id != #{userId}
  </select>
  
  <select id="checkSaftyAnswer" resultType="int" parameterType="map">
  	select count(1) from eshop_user 
  	where username = #{username} and question = #{question} and answer = #{answer}
  </select>
  
  <update id="updateUsersPasswordByUsername"  parameterType="map">
  	update eshop_user 
  	set password=#{passwordNew}, update_time=now()
  	where username = #{username}
  </update>
  
  <select id="checkUsersPassword" resultType="int" parameterType="map">
  	select count(1) from eshop_user where id=#{userId} and password = #{password}
  </select>
  <select id="findUserListInfo" resultMap="userBaseResultMap">
    select 
    <include refid="userBase_Column_List" />
    from eshop_user
  </select>
</mapper>